@model  Seldino.Application.Query.StoreService.StoresQueryResponse

@using Seldino.CrossCutting.Web.Helpers
@using Seldino.CrossCutting.Web.ViewMessages

<div class="row">
    <div class="col-lg-12">
        <h4 class="page-header">@StoreViewMessage.InActiveStores</h4>
        @*<div class="btn-toolbar propbar">
                @Html.ActionLink(BannerViewMessage.CreateBannerPageTitle, "Create", "Banner", new { @class = "btn btn-default btn-sm pull-right" })
                <div class="progroup btn-group">
                </div>
            </div>*@

        <hr />
        <table id="StoreList" class="table center-td">
            <thead>
                <tr>
                    <th><input type="checkbox" class="datapropfull" /></th>
                    <th>@StoreViewMessage.City</th>
                    <th>@StoreViewMessage.Name</th>
                    <th>@CommonViewMessage.Owner</th>
                    <th>@StoreViewMessage.Phone</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Stores != null)
                {
                    foreach (var item in Model.Stores.Result)
                    {
                        string rowId = Guid.NewGuid().ToString("N");
                        <tr>
                            <td><input type="checkbox" class="dataprop" value="@item.StoreId" /></td>
                            <td class="lstimg">
                                <div class="sl-p" style="background-image: url(@Html.GetImageUrl(item.Pictures.Select(d=>d.FullPath).FirstOrDefault()))"></div>
                            </td>

                            <td>
                                @Html.ActionLink(item.Name, "Detail", "Store", new { storeId = item.StoreId }, null)
                            </td>

                            <td>
                                @{
                                    var user = item.Users.Select(c => c.Email).FirstOrDefault();
                                    if (user != null)
                                    {
                                        @Html.ActionLink(user, "Detail", "Membership", new { email = user }, null)
                                    }
                                }
                            </td>

                            <td>@item.Phone</td>

                            <td>
                                <div class="btn-group">
                                    @Ajax.ActionLink(CommonViewMessage.Delete, "Delete", "Store", new { command = item }, new AjaxOptions
                                    {
                                        Confirm = CommonViewMessage.Areyousure,
                                        OnFailure = "OnFailure",
                                        OnSuccess = "$('#" + rowId + "').remove()"
                                    }, new { @class = "btn btn-default" })
                                </div>

                            </td>
                        </tr>
                                        }
                                    }

            </tbody>
        </table>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        function generateGUID() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }
        function unMarkList() {
            $.each($(".fa-check-square-o"), function (i, element) {
                $(this).removeClass("fa-check-square-o").addClass("fa-square-o");
            });
            $.each($(".prop input[type=hidden]"), function (i, index) {
                $("#" + $(this).val()).remove();
            })
            $(".prop").remove();
        }
        function ajaxLoading() {
            $("#loading").show();
        }
        function remopveAjaxLoading() {
            $("#loading").hide();
        }
        var guid = generateGUID();
        $(function () {
            $(".dataprop, .datapropfull").attr("checked", false);
            var SelectedCount = 0
            $("body").on("click", ".dataprop", function () {
                if ($(this).is(':checked')) {
                    $(this).parents("tr").addClass("rowchecked");
                    SelectedCount++;
                }
                else {
                    $(".datapropfull").prop('checked', false);
                    $(this).parents("tr").removeClass("rowchecked");
                    SelectedCount--;
                }
                if (SelectedCount == 0) {
                    $("#_delBnnS").remove();
                    $("#_deacBnnS").remove();
                }
                else {
                    if ($("#_delBnnS").html() === undefined && $("#_deacBnnS").html() === undefined) {
                        $(".progroup").append('<button id="_delBnnS" onclick="DeleteSelectedStore()" class="btn btn-default btn-sm" title="@CommonViewMessage.Delete" ><i class="icon-trash"></i></button>');
                        $(".progroup").append('<button id="_deacBnnS" onclick="DeactivateSelectedStore()" class="btn btn-default btn-sm" title="@CommonViewMessage.Deactivate" ><i class="icon-eye-close"></i></button>')
                    }

                }
            });

            $("body").on("click", ".datapropfull", function () {
                if ($(this).is(':checked')) {
                    var count = 0;
                    $.each($(".dataprop"), function (index, element) {
                        count++;
                        $(this).prop('checked', true);
                        $(this).parents("tr").addClass("rowchecked");
                    });
                    if (count != 0) {
                        if ($("#_delBnnS").html() === undefined && $("#_deacBnnS").html() === undefined) {
                            $(".progroup").append('<button id="_delBnnS" onclick="DeleteSelectedStore()" class="btn btn-default btn-sm" title="@CommonViewMessage.Delete" ><i class="icon-trash"></i></button>')
                            $(".progroup").append('<button id="_deacBnnS" onclick="DeactivateSelectedStore()" class="btn btn-default btn-sm" title="@CommonViewMessage.Deactivate" ><i class="icon-eye-close"></i></button>')
                        }
                    }
                }
                else {
                    $("#_delBnnS").remove();
                    $("#_deacBnnS").remove();
                    $.each($(".dataprop"), function (index, element) {
                        $(this).prop('checked', false);
                        $(this).parents("tr").removeClass("rowchecked");
                    });
                }
            });
        });
        function DeleteSelectedStore() {
            alertify.confirm('@StoreViewMessage.StoreDeleteConfirm', function () {
                ajaxLoading();
                var selectedList = [];
                $.each($(".dataprop"), function (i, element) {
                    if ($(this).is(':checked')) {
                        selectedList.push($(this).val());
                    }
                });
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Delete", "Store")',
                    data: $.param({ StoreIds: selectedList }, true),
                    success: function (data) {
                        alertify.success(data.Message);
                        if (data.Success) {
                            $("tr.rowchecked").remove();
                            $("#_delBnnS").remove();
                        }
                        remopveAjaxLoading();
                    },
                    datatype: "json",
                    traditional: true,
                    error: function (xhr, ajaxOptions, thrownError) {
                        alertify.error(xhr.status);
                        alertify.error(thrownError);
                        remopveAjaxLoading();
                    }
                });
            });
        }

        function DeactivateSelectedStore() {
            alertify.confirm('@StoreViewMessage.StoreDeactivateConfirm', function () {
                ajaxLoading();
                var selectedList = [];
                $.each($(".dataprop"), function (i, element) {
                    if ($(this).is(':checked')) {
                        selectedList.push($(this).val());
                    }
                });
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Deactivate", "Store")',
                    data: $.param({ StoreIds: selectedList }, true),
                    success: function (data) {
                        alertify.success(data.Message);
                        if (data.Success) {
                            $("tr.rowchecked").remove();
                            $("#_deacBnnS").remove();
                        }
                        remopveAjaxLoading();
                    },
                    datatype: "json",
                    traditional: true,
                    error: function (xhr, ajaxOptions, thrownError) {
                        alertify.error(xhr.status);
                        alertify.error(thrownError);
                        remopveAjaxLoading();
                    }
                });
            });
        }
    </script>
}
